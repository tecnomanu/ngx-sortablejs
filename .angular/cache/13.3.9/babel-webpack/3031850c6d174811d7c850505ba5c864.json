{"ast":null,"code":"function cov_jhfzvbb6e() {\n  var path = \"/Volumes/Datos SSD/Sites/pruebas_proyectos/ngx-sortablejs/projects/ngx-sortablejs/src/lib/sortablejs.service.ts\";\n  var hash = \"bd902b75158498557d2a8467603ebb545fef4680\";\n  var global = new Function(\"return this\")();\n  var gcv = \"__coverage__\";\n  var coverageData = {\n    path: \"/Volumes/Datos SSD/Sites/pruebas_proyectos/ngx-sortablejs/projects/ngx-sortablejs/src/lib/sortablejs.service.ts\",\n    statementMap: {\n      \"0\": {\n        start: {\n          line: 3,\n          column: 24\n        },\n        end: {\n          line: 4,\n          column: 1\n        }\n      },\n      \"1\": {\n        start: {\n          line: 5,\n          column: 0\n        },\n        end: {\n          line: 9,\n          column: 22\n        }\n      }\n    },\n    fnMap: {},\n    branchMap: {},\n    s: {\n      \"0\": 0,\n      \"1\": 0\n    },\n    f: {},\n    b: {},\n    inputSourceMap: {\n      version: 3,\n      file: \"sortablejs.service.js\",\n      sourceRoot: \"\",\n      sources: [\"/Volumes/Datos SSD/Sites/pruebas_proyectos/ngx-sortablejs/projects/ngx-sortablejs/src/lib/sortablejs.service.ts\"],\n      names: [],\n      mappings: \";AAAA,OAAO,EAAE,UAAU,EAAE,MAAM,eAAe,CAAC;IAK9B,iBAAiB,SAAjB,iBAAiB;CAS7B,CAAA;AATY,iBAAiB;IAH7B,UAAU,CAAC;QACV,UAAU,EAAE,MAAM;KACnB,CAAC;GACW,iBAAiB,CAS7B;SATY,iBAAiB\",\n      sourcesContent: [\"import { Injectable } from '@angular/core';\\n\\n@Injectable({\\n  providedIn: 'root',\\n})\\nexport class SortablejsService {\\n\\n  // original library calls the events in unnatural order\\n  // first the item is added, then removed from the previous array\\n  // this is a temporary event to work this around\\n  // as long as only one sortable takes place at a certain time\\n  // this is enough to have a single `global` event\\n  transfer: (items: any[]) => void;\\n\\n}\\n\"]\n    },\n    _coverageSchema: \"1a1c01bbd47fc00a2c39e90264f33305004495a9\",\n    hash: \"bd902b75158498557d2a8467603ebb545fef4680\"\n  };\n  var coverage = global[gcv] || (global[gcv] = {});\n\n  if (!coverage[path] || coverage[path].hash !== hash) {\n    coverage[path] = coverageData;\n  }\n\n  var actualCoverage = coverage[path];\n  {\n    // @ts-ignore\n    cov_jhfzvbb6e = function () {\n      return actualCoverage;\n    };\n  }\n  return actualCoverage;\n}\n\ncov_jhfzvbb6e();\nimport { __decorate } from \"tslib\";\nimport { Injectable } from '@angular/core';\ncov_jhfzvbb6e().s[0]++;\nlet SortablejsService = class SortablejsService {};\ncov_jhfzvbb6e().s[1]++;\nSortablejsService = __decorate([Injectable({\n  providedIn: 'root'\n})], SortablejsService);\nexport { SortablejsService };","map":{"version":3,"sources":["/Volumes/Datos SSD/Sites/pruebas_proyectos/ngx-sortablejs/projects/ngx-sortablejs/src/lib/sortablejs.service.ts"],"names":["__decorate","Injectable","SortablejsService","providedIn"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAeY;;;;;;;;;AAfZ,SAASA,UAAT,QAA2B,OAA3B;AACA,SAASC,UAAT,QAA2B,eAA3B;;AACA,IAAIC,iBAAiB,GAAG,MAAMA,iBAAN,CAAwB,EAAhD;;AAEAA,iBAAiB,GAAGF,UAAU,CAAC,CAC3BC,UAAU,CAAC;AACPE,EAAAA,UAAU,EAAE;AADL,CAAD,CADiB,CAAD,EAI3BD,iBAJ2B,CAA9B;AAKA,SAASA,iBAAT","sourcesContent":["import { __decorate } from \"tslib\";\nimport { Injectable } from '@angular/core';\nlet SortablejsService = class SortablejsService {\n};\nSortablejsService = __decorate([\n    Injectable({\n        providedIn: 'root',\n    })\n], SortablejsService);\nexport { SortablejsService };\n"]},"metadata":{},"sourceType":"module"}