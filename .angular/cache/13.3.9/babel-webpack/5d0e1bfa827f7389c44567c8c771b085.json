{"ast":null,"code":"// This file is required by karma.conf.js and loads recursively all the .spec and framework files\nimport 'zone.js';\nimport 'zone.js/testing';\nimport { getTestBed } from '@angular/core/testing';\nimport { BrowserDynamicTestingModule, platformBrowserDynamicTesting } from '@angular/platform-browser-dynamic/testing'; // First, initialize the Angular testing environment.\n\ngetTestBed().initTestEnvironment(BrowserDynamicTestingModule, platformBrowserDynamicTesting(), {\n  teardown: {\n    destroyAfterEach: false\n  }\n}); // Then we find all the tests.\n\nconst context = require.context('./', true, /\\.spec\\.ts$/); // And load the modules.\n\n\ncontext.keys().map(context);","map":{"version":3,"sources":["/Volumes/Datos SSD/Sites/pruebas_proyectos/ngx-sortablejs/projects/ngx-sortablejs/src/test.ts"],"names":["getTestBed","BrowserDynamicTestingModule","platformBrowserDynamicTesting","initTestEnvironment","teardown","destroyAfterEach","context","require","keys","map"],"mappings":"AAAA;AACA,OAAO,SAAP;AACA,OAAO,iBAAP;AACA,SAASA,UAAT,QAA2B,uBAA3B;AACA,SAASC,2BAAT,EAAsCC,6BAAtC,QAA4E,2CAA5E,C,CACA;;AACAF,UAAU,GAAGG,mBAAb,CAAiCF,2BAAjC,EAA8DC,6BAA6B,EAA3F,EAA+F;AAC3FE,EAAAA,QAAQ,EAAE;AAAEC,IAAAA,gBAAgB,EAAE;AAApB;AADiF,CAA/F,E,CAGA;;AACA,MAAMC,OAAO,GAAGC,OAAO,CAACD,OAAR,CAAgB,IAAhB,EAAsB,IAAtB,EAA4B,aAA5B,CAAhB,C,CACA;;;AACAA,OAAO,CAACE,IAAR,GAAeC,GAAf,CAAmBH,OAAnB","sourcesContent":["// This file is required by karma.conf.js and loads recursively all the .spec and framework files\nimport 'zone.js';\nimport 'zone.js/testing';\nimport { getTestBed } from '@angular/core/testing';\nimport { BrowserDynamicTestingModule, platformBrowserDynamicTesting, } from '@angular/platform-browser-dynamic/testing';\n// First, initialize the Angular testing environment.\ngetTestBed().initTestEnvironment(BrowserDynamicTestingModule, platformBrowserDynamicTesting(), {\n    teardown: { destroyAfterEach: false }\n});\n// Then we find all the tests.\nconst context = require.context('./', true, /\\.spec\\.ts$/);\n// And load the modules.\ncontext.keys().map(context);\n"]},"metadata":{},"sourceType":"module"}