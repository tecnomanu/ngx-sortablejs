{"ast":null,"code":"function cov_1q6j89ka8v() {\n  var path = \"/Volumes/Datos SSD/Sites/pruebas_proyectos/ngx-sortablejs/projects/ngx-sortablejs/src/lib/sortablejs-binding.ts\";\n  var hash = \"04625595d3679df649b476eaf6df59404dcbfc3a\";\n  var global = new Function(\"return this\")();\n  var gcv = \"__coverage__\";\n  var coverageData = {\n    path: \"/Volumes/Datos SSD/Sites/pruebas_proyectos/ngx-sortablejs/projects/ngx-sortablejs/src/lib/sortablejs-binding.ts\",\n    statementMap: {\n      \"0\": {\n        start: {\n          line: 3,\n          column: 8\n        },\n        end: {\n          line: 3,\n          column: 29\n        }\n      },\n      \"1\": {\n        start: {\n          line: 6,\n          column: 8\n        },\n        end: {\n          line: 11,\n          column: 9\n        }\n      },\n      \"2\": {\n        start: {\n          line: 7,\n          column: 12\n        },\n        end: {\n          line: 7,\n          column: 44\n        }\n      },\n      \"3\": {\n        start: {\n          line: 10,\n          column: 12\n        },\n        end: {\n          line: 10,\n          column: 47\n        }\n      },\n      \"4\": {\n        start: {\n          line: 14,\n          column: 8\n        },\n        end: {\n          line: 14,\n          column: 77\n        }\n      },\n      \"5\": {\n        start: {\n          line: 18,\n          column: 8\n        },\n        end: {\n          line: 24,\n          column: 9\n        }\n      },\n      \"6\": {\n        start: {\n          line: 19,\n          column: 12\n        },\n        end: {\n          line: 19,\n          column: 41\n        }\n      },\n      \"7\": {\n        start: {\n          line: 20,\n          column: 12\n        },\n        end: {\n          line: 20,\n          column: 40\n        }\n      },\n      \"8\": {\n        start: {\n          line: 23,\n          column: 12\n        },\n        end: {\n          line: 23,\n          column: 51\n        }\n      },\n      \"9\": {\n        start: {\n          line: 25,\n          column: 8\n        },\n        end: {\n          line: 25,\n          column: 20\n        }\n      },\n      \"10\": {\n        start: {\n          line: 31,\n          column: 8\n        },\n        end: {\n          line: 31,\n          column: 79\n        }\n      }\n    },\n    fnMap: {\n      \"0\": {\n        name: \"(anonymous_0)\",\n        decl: {\n          start: {\n            line: 2,\n            column: 4\n          },\n          end: {\n            line: 2,\n            column: 5\n          }\n        },\n        loc: {\n          start: {\n            line: 2,\n            column: 24\n          },\n          end: {\n            line: 4,\n            column: 5\n          }\n        },\n        line: 2\n      },\n      \"1\": {\n        name: \"(anonymous_1)\",\n        decl: {\n          start: {\n            line: 5,\n            column: 4\n          },\n          end: {\n            line: 5,\n            column: 5\n          }\n        },\n        loc: {\n          start: {\n            line: 5,\n            column: 24\n          },\n          end: {\n            line: 12,\n            column: 5\n          }\n        },\n        line: 5\n      },\n      \"2\": {\n        name: \"(anonymous_2)\",\n        decl: {\n          start: {\n            line: 13,\n            column: 4\n          },\n          end: {\n            line: 13,\n            column: 5\n          }\n        },\n        loc: {\n          start: {\n            line: 13,\n            column: 15\n          },\n          end: {\n            line: 15,\n            column: 5\n          }\n        },\n        line: 13\n      },\n      \"3\": {\n        name: \"(anonymous_3)\",\n        decl: {\n          start: {\n            line: 16,\n            column: 4\n          },\n          end: {\n            line: 16,\n            column: 5\n          }\n        },\n        loc: {\n          start: {\n            line: 16,\n            column: 18\n          },\n          end: {\n            line: 26,\n            column: 5\n          }\n        },\n        line: 16\n      },\n      \"4\": {\n        name: \"(anonymous_4)\",\n        decl: {\n          start: {\n            line: 29,\n            column: 4\n          },\n          end: {\n            line: 29,\n            column: 5\n          }\n        },\n        loc: {\n          start: {\n            line: 29,\n            column: 22\n          },\n          end: {\n            line: 32,\n            column: 5\n          }\n        },\n        line: 29\n      }\n    },\n    branchMap: {\n      \"0\": {\n        loc: {\n          start: {\n            line: 6,\n            column: 8\n          },\n          end: {\n            line: 11,\n            column: 9\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 6,\n            column: 8\n          },\n          end: {\n            line: 11,\n            column: 9\n          }\n        }, {\n          start: {\n            line: 9,\n            column: 13\n          },\n          end: {\n            line: 11,\n            column: 9\n          }\n        }],\n        line: 6\n      },\n      \"1\": {\n        loc: {\n          start: {\n            line: 14,\n            column: 15\n          },\n          end: {\n            line: 14,\n            column: 76\n          }\n        },\n        type: \"cond-expr\",\n        locations: [{\n          start: {\n            line: 14,\n            column: 34\n          },\n          end: {\n            line: 14,\n            column: 55\n          }\n        }, {\n          start: {\n            line: 14,\n            column: 58\n          },\n          end: {\n            line: 14,\n            column: 76\n          }\n        }],\n        line: 14\n      },\n      \"2\": {\n        loc: {\n          start: {\n            line: 18,\n            column: 8\n          },\n          end: {\n            line: 24,\n            column: 9\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 18,\n            column: 8\n          },\n          end: {\n            line: 24,\n            column: 9\n          }\n        }, {\n          start: {\n            line: 22,\n            column: 13\n          },\n          end: {\n            line: 24,\n            column: 9\n          }\n        }],\n        line: 18\n      },\n      \"3\": {\n        loc: {\n          start: {\n            line: 31,\n            column: 15\n          },\n          end: {\n            line: 31,\n            column: 78\n          }\n        },\n        type: \"binary-expr\",\n        locations: [{\n          start: {\n            line: 31,\n            column: 15\n          },\n          end: {\n            line: 31,\n            column: 31\n          }\n        }, {\n          start: {\n            line: 31,\n            column: 35\n          },\n          end: {\n            line: 31,\n            column: 55\n          }\n        }, {\n          start: {\n            line: 31,\n            column: 59\n          },\n          end: {\n            line: 31,\n            column: 78\n          }\n        }],\n        line: 31\n      }\n    },\n    s: {\n      \"0\": 0,\n      \"1\": 0,\n      \"2\": 0,\n      \"3\": 0,\n      \"4\": 0,\n      \"5\": 0,\n      \"6\": 0,\n      \"7\": 0,\n      \"8\": 0,\n      \"9\": 0,\n      \"10\": 0\n    },\n    f: {\n      \"0\": 0,\n      \"1\": 0,\n      \"2\": 0,\n      \"3\": 0,\n      \"4\": 0\n    },\n    b: {\n      \"0\": [0, 0],\n      \"1\": [0, 0],\n      \"2\": [0, 0],\n      \"3\": [0, 0, 0]\n    },\n    inputSourceMap: {\n      version: 3,\n      file: \"sortablejs-binding.js\",\n      sourceRoot: \"\",\n      sources: [\"/Volumes/Datos SSD/Sites/pruebas_proyectos/ngx-sortablejs/projects/ngx-sortablejs/src/lib/sortablejs-binding.ts\"],\n      names: [],\n      mappings: \"AAEA,MAAM,OAAO,iBAAiB;IAE5B,YAAoB,MAAoB;QAApB,WAAM,GAAN,MAAM,CAAc;IACxC,CAAC;IAED,MAAM,CAAC,KAAa,EAAE,IAAS;QAC7B,IAAI,IAAI,CAAC,WAAW,EAAE;YACpB,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;SACjC;aAAM;YACL,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC;SACpC;IACH,CAAC;IAED,GAAG,CAAC,KAAa;QACf,OAAO,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;IACvE,CAAC;IAED,MAAM,CAAC,KAAa;QAClB,IAAI,IAAI,CAAC;QAET,IAAI,IAAI,CAAC,WAAW,EAAE;YACpB,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC;YAC7B,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;SAC7B;aAAM;YACL,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;SACxC;QAED,OAAO,IAAI,CAAC;IACd,CAAC;IAED,0DAA0D;IAC1D,qEAAqE;IACrE,IAAY,WAAW;QACrB,+EAA+E;QAC/E,OAAO,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE,IAAI,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,IAAI,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC;IACzE,CAAC;CAEF\",\n      sourcesContent: [\"import {SortableData} from './sortablejs.directive';\\n\\nexport class SortablejsBinding {\\n\\n  constructor(private target: SortableData) {\\n  }\\n\\n  insert(index: number, item: any) {\\n    if (this.isFormArray) {\\n      this.target.insert(index, item);\\n    } else {\\n      this.target.splice(index, 0, item);\\n    }\\n  }\\n\\n  get(index: number) {\\n    return this.isFormArray ? this.target.at(index) : this.target[index];\\n  }\\n\\n  remove(index: number) {\\n    let item;\\n\\n    if (this.isFormArray) {\\n      item = this.target.at(index);\\n      this.target.removeAt(index);\\n    } else {\\n      item = this.target.splice(index, 1)[0];\\n    }\\n\\n    return item;\\n  }\\n\\n  // we need this to identify that the target is a FormArray\\n  // we don't want to have a dependency on @angular/forms just for that\\n  private get isFormArray() {\\n    // just checking for random FormArray methods not available on a standard array\\n    return !!this.target.at && !!this.target.insert && !!this.target.reset;\\n  }\\n\\n}\\n\"]\n    },\n    _coverageSchema: \"1a1c01bbd47fc00a2c39e90264f33305004495a9\",\n    hash: \"04625595d3679df649b476eaf6df59404dcbfc3a\"\n  };\n  var coverage = global[gcv] || (global[gcv] = {});\n\n  if (!coverage[path] || coverage[path].hash !== hash) {\n    coverage[path] = coverageData;\n  }\n\n  var actualCoverage = coverage[path];\n  {\n    // @ts-ignore\n    cov_1q6j89ka8v = function () {\n      return actualCoverage;\n    };\n  }\n  return actualCoverage;\n}\n\ncov_1q6j89ka8v();\nexport class SortablejsBinding {\n  constructor(target) {\n    cov_1q6j89ka8v().f[0]++;\n    cov_1q6j89ka8v().s[0]++;\n    this.target = target;\n  }\n\n  insert(index, item) {\n    cov_1q6j89ka8v().f[1]++;\n    cov_1q6j89ka8v().s[1]++;\n\n    if (this.isFormArray) {\n      cov_1q6j89ka8v().b[0][0]++;\n      cov_1q6j89ka8v().s[2]++;\n      this.target.insert(index, item);\n    } else {\n      cov_1q6j89ka8v().b[0][1]++;\n      cov_1q6j89ka8v().s[3]++;\n      this.target.splice(index, 0, item);\n    }\n  }\n\n  get(index) {\n    cov_1q6j89ka8v().f[2]++;\n    cov_1q6j89ka8v().s[4]++;\n    return this.isFormArray ? (cov_1q6j89ka8v().b[1][0]++, this.target.at(index)) : (cov_1q6j89ka8v().b[1][1]++, this.target[index]);\n  }\n\n  remove(index) {\n    cov_1q6j89ka8v().f[3]++;\n    let item;\n    cov_1q6j89ka8v().s[5]++;\n\n    if (this.isFormArray) {\n      cov_1q6j89ka8v().b[2][0]++;\n      cov_1q6j89ka8v().s[6]++;\n      item = this.target.at(index);\n      cov_1q6j89ka8v().s[7]++;\n      this.target.removeAt(index);\n    } else {\n      cov_1q6j89ka8v().b[2][1]++;\n      cov_1q6j89ka8v().s[8]++;\n      item = this.target.splice(index, 1)[0];\n    }\n\n    cov_1q6j89ka8v().s[9]++;\n    return item;\n  } // we need this to identify that the target is a FormArray\n  // we don't want to have a dependency on @angular/forms just for that\n\n\n  get isFormArray() {\n    cov_1q6j89ka8v().f[4]++;\n    cov_1q6j89ka8v().s[10]++;\n    // just checking for random FormArray methods not available on a standard array\n    return (cov_1q6j89ka8v().b[3][0]++, !!this.target.at) && (cov_1q6j89ka8v().b[3][1]++, !!this.target.insert) && (cov_1q6j89ka8v().b[3][2]++, !!this.target.reset);\n  }\n\n}","map":{"version":3,"sources":["/Volumes/Datos SSD/Sites/pruebas_proyectos/ngx-sortablejs/projects/ngx-sortablejs/src/lib/sortablejs-binding.ts"],"names":["SortablejsBinding","constructor","target","insert","index","item","isFormArray","splice","get","at","remove","removeAt","reset"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAeY;;;;;;;;;AAfZ,OAAO,MAAMA,iBAAN,CAAwB;AAC3BC,EAAAA,WAAW,CAACC,MAAD,EAAS;AAAA;AAAA;AAChB,SAAKA,MAAL,GAAcA,MAAd;AACH;;AACDC,EAAAA,MAAM,CAACC,KAAD,EAAQC,IAAR,EAAc;AAAA;AAAA;;AAChB,QAAI,KAAKC,WAAT,EAAsB;AAAA;AAAA;AAClB,WAAKJ,MAAL,CAAYC,MAAZ,CAAmBC,KAAnB,EAA0BC,IAA1B;AACH,KAFD,MAGK;AAAA;AAAA;AACD,WAAKH,MAAL,CAAYK,MAAZ,CAAmBH,KAAnB,EAA0B,CAA1B,EAA6BC,IAA7B;AACH;AACJ;;AACDG,EAAAA,GAAG,CAACJ,KAAD,EAAQ;AAAA;AAAA;AACP,WAAO,KAAKE,WAAL,gCAAmB,KAAKJ,MAAL,CAAYO,EAAZ,CAAeL,KAAf,CAAnB,iCAA2C,KAAKF,MAAL,CAAYE,KAAZ,CAA3C,CAAP;AACH;;AACDM,EAAAA,MAAM,CAACN,KAAD,EAAQ;AAAA;AACV,QAAIC,IAAJ;AADU;;AAEV,QAAI,KAAKC,WAAT,EAAsB;AAAA;AAAA;AAClBD,MAAAA,IAAI,GAAG,KAAKH,MAAL,CAAYO,EAAZ,CAAeL,KAAf,CAAP;AADkB;AAElB,WAAKF,MAAL,CAAYS,QAAZ,CAAqBP,KAArB;AACH,KAHD,MAIK;AAAA;AAAA;AACDC,MAAAA,IAAI,GAAG,KAAKH,MAAL,CAAYK,MAAZ,CAAmBH,KAAnB,EAA0B,CAA1B,EAA6B,CAA7B,CAAP;AACH;;AARS;AASV,WAAOC,IAAP;AACH,GAzB0B,CA0B3B;AACA;;;AACe,MAAXC,WAAW,GAAG;AAAA;AAAA;AACd;AACA,WAAO,8BAAC,CAAC,KAAKJ,MAAL,CAAYO,EAAd,kCAAoB,CAAC,CAAC,KAAKP,MAAL,CAAYC,MAAlC,kCAA4C,CAAC,CAAC,KAAKD,MAAL,CAAYU,KAA1D,CAAP;AACH;;AA/B0B","sourcesContent":["export class SortablejsBinding {\n    constructor(target) {\n        this.target = target;\n    }\n    insert(index, item) {\n        if (this.isFormArray) {\n            this.target.insert(index, item);\n        }\n        else {\n            this.target.splice(index, 0, item);\n        }\n    }\n    get(index) {\n        return this.isFormArray ? this.target.at(index) : this.target[index];\n    }\n    remove(index) {\n        let item;\n        if (this.isFormArray) {\n            item = this.target.at(index);\n            this.target.removeAt(index);\n        }\n        else {\n            item = this.target.splice(index, 1)[0];\n        }\n        return item;\n    }\n    // we need this to identify that the target is a FormArray\n    // we don't want to have a dependency on @angular/forms just for that\n    get isFormArray() {\n        // just checking for random FormArray methods not available on a standard array\n        return !!this.target.at && !!this.target.insert && !!this.target.reset;\n    }\n}\n"]},"metadata":{},"sourceType":"module"}