{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../../../../projects/ngx-sortablejs/src/lib/sortablejs.directive\";\nimport * as i2 from \"@angular/common\";\n\nfunction SortableWithOptionsComponent_li_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\", 9);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const item_r3 = ctx.$implicit;\n    i0.ɵɵclassProp(\"draggable\", item_r3.draggable)(\"disabled\", !item_r3.draggable);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" Element \", item_r3.text, \" \");\n  }\n}\n\nfunction SortableWithOptionsComponent_li_32_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\", 9);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const item_r4 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" Element \", item_r4, \" \");\n  }\n}\n\nfunction SortableWithOptionsComponent_li_57_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\", 9);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const item_r5 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" Element \", item_r5, \" \");\n  }\n}\n\nexport let SortableWithOptionsComponent = /*#__PURE__*/(() => {\n  class SortableWithOptionsComponent {\n    constructor() {\n      this.draggableItems = [{\n        draggable: true,\n        text: '1'\n      }, {\n        draggable: true,\n        text: '2'\n      }, {\n        draggable: false,\n        text: '3'\n      }, {\n        draggable: true,\n        text: '4'\n      }, {\n        draggable: true,\n        text: '5'\n      }];\n      this.eventItems = ['1', '2', '3', '4', '5'];\n      this.eventUpdateCounter = 0;\n      this.scrollableItems = Array.from({\n        length: 30\n      }).map((u, i) => i + 1);\n      this.draggableOptions = {\n        draggable: '.draggable'\n      };\n      this.eventOptions = {\n        onUpdate: () => this.eventUpdateCounter++\n      };\n      this.scrollableOptions = {\n        scroll: true,\n        scrollSensitivity: 100\n      };\n    }\n\n  }\n\n  SortableWithOptionsComponent.ɵfac = function SortableWithOptionsComponent_Factory(t) {\n    return new (t || SortableWithOptionsComponent)();\n  };\n\n  SortableWithOptionsComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: SortableWithOptionsComponent,\n    selectors: [[\"app-sortable-with-options\"]],\n    decls: 58,\n    vars: 13,\n    consts: [[1, \"lead\"], [\"href\", \"https://github.com/SortableJS/ngx-sortablejs/tree/master/src/app/examples/sortable-with-options\", \"target\", \"_blank\"], [1, \"mt-4\", \"mb-3\"], [1, \"list-group\", 3, \"sortablejs\", \"sortablejsOptions\"], [\"class\", \"list-group-item\", 3, \"draggable\", \"disabled\", 4, \"ngFor\", \"ngForOf\"], [1, \"my-3\"], [1, \"alert\", \"alert-dark\"], [\"class\", \"list-group-item\", 4, \"ngFor\", \"ngForOf\"], [1, \"alert\", \"alert-info\", \"my-3\"], [1, \"list-group-item\"]],\n    template: function SortableWithOptionsComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"h1\");\n        i0.ɵɵtext(1, \"Custom options\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(2, \"p\", 0)(3, \"strong\")(4, \"a\", 1);\n        i0.ɵɵtext(5, \"The source code\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵtext(6, \" This example shows how the various options could be used in order to configure \");\n        i0.ɵɵelementStart(7, \"em\");\n        i0.ɵɵtext(8, \"Sortablejs\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(9, \". \");\n        i0.ɵɵelementStart(10, \"h2\", 2);\n        i0.ɵɵtext(11, \"Disabled options\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(12, \"ul\", 3);\n        i0.ɵɵtemplate(13, SortableWithOptionsComponent_li_13_Template, 2, 5, \"li\", 4);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(14, \"p\", 5);\n        i0.ɵɵtext(15, \"and the actual model is\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(16, \"div\", 6);\n        i0.ɵɵtext(17);\n        i0.ɵɵpipe(18, \"json\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(19, \"h2\", 2);\n        i0.ɵɵtext(20, \"Events\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(21, \"p\", 5);\n        i0.ɵɵtext(22, \" Binding to the events is easy. Any even could be attached as a property of \");\n        i0.ɵɵelementStart(23, \"em\");\n        i0.ɵɵtext(24, \"Sortablejs\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(25, \". The example below binds to the \");\n        i0.ɵɵelementStart(26, \"em\");\n        i0.ɵɵtext(27, \"onUpdate\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(28, \" event. Drag the items and track the amount of updates.\\n\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(29, \"div\", 6);\n        i0.ɵɵtext(30);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(31, \"ul\", 3);\n        i0.ɵɵtemplate(32, SortableWithOptionsComponent_li_32_Template, 2, 1, \"li\", 7);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(33, \"div\", 8);\n        i0.ɵɵtext(34, \" Hint: for the \");\n        i0.ɵɵelementStart(35, \"em\");\n        i0.ɵɵtext(36, \"FormArray\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(37, \" using \");\n        i0.ɵɵelementStart(38, \"em\");\n        i0.ɵɵtext(39, \"onUpdate\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(40, \" is kinda overhead because the \");\n        i0.ɵɵelementStart(41, \"em\");\n        i0.ɵɵtext(42, \"FormArray.valueChanges\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(43, \" provides an event on every change.\\n\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(44, \"h2\", 2);\n        i0.ɵɵtext(45, \"Autoscroll with fixed navbar\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(46, \"p\");\n        i0.ɵɵtext(47, \" Normally the scrolling that is performed by \");\n        i0.ɵɵelementStart(48, \"em\");\n        i0.ɵɵtext(49, \"Sortablejs\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(50, \" is working fine. However with a fixed navbar it may cause problems.\\n\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(51, \"p\");\n        i0.ɵɵtext(52, \" Setting the \");\n        i0.ɵɵelementStart(53, \"em\");\n        i0.ɵɵtext(54, \"scrollSensitivity\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(55, \" to the proper value will solve the problem. Try it on the long list below\\n\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(56, \"ul\", 3);\n        i0.ɵɵtemplate(57, SortableWithOptionsComponent_li_57_Template, 2, 1, \"li\", 7);\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(12);\n        i0.ɵɵproperty(\"sortablejs\", ctx.draggableItems)(\"sortablejsOptions\", ctx.draggableOptions);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", ctx.draggableItems);\n        i0.ɵɵadvance(4);\n        i0.ɵɵtextInterpolate1(\" > \", i0.ɵɵpipeBind1(18, 11, ctx.draggableItems), \"\\n\");\n        i0.ɵɵadvance(13);\n        i0.ɵɵtextInterpolate1(\" > Updated \", ctx.eventUpdateCounter, \" times\\n\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"sortablejs\", ctx.eventItems)(\"sortablejsOptions\", ctx.eventOptions);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", ctx.eventItems);\n        i0.ɵɵadvance(24);\n        i0.ɵɵproperty(\"sortablejs\", ctx.scrollableItems)(\"sortablejsOptions\", ctx.scrollableOptions);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", ctx.scrollableItems);\n      }\n    },\n    directives: [i1.SortablejsDirective, i2.NgForOf],\n    pipes: [i2.JsonPipe],\n    styles: [\"\"]\n  });\n  return SortableWithOptionsComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}